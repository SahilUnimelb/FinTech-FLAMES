{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst getAccountDetails = () => {\n  _s();\n  const [accountData, setAccountData] = useState(null);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const fetchAccountDetails = async () => {\n      // Retrieve the token from localStorage\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        setMessage('You are not logged in');\n        return;\n      }\n      try {\n        // Make a request to get the user account details\n        const response = await axios.post('http://localhost:5000/api/accounts/getUser', {}, {\n          headers: {\n            Authorization: `Bearer ${token}` // Send the token in the Authorization header\n          }\n        });\n        setAccountData(response.data); // Set the account data received from backend\n      } catch (error) {\n        console.error('Error fetching account details:', error);\n        if (error.response && error.response.data) {\n          setMessage(error.response.data.message); // Display error message\n        } else {\n          setMessage('Failed to fetch account details. Please try again.');\n        }\n      }\n    };\n    fetchAccountDetails();\n  }, []);\n  return {\n    accountData,\n    message\n  };\n};\n_s(getAccountDetails, \"OCTDpNdOjGN4QAWtLJIQ6hPHkok=\");\nexport default getAccountDetails;","map":{"version":3,"names":["useEffect","useState","axios","getAccountDetails","_s","accountData","setAccountData","message","setMessage","fetchAccountDetails","token","localStorage","getItem","response","post","headers","Authorization","data","error","console"],"sources":["C:/Users/User/Documents/GitHub/FinTech-FLAMES/FrontEnd/src/Hooks/useAccountDetails.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst getAccountDetails = () => {\r\n  const [accountData, setAccountData] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchAccountDetails = async () => {\r\n      // Retrieve the token from localStorage\r\n      const token = localStorage.getItem('authToken'); \r\n\r\n      if (!token) {\r\n        setMessage('You are not logged in');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Make a request to get the user account details\r\n        const response = await axios.post('http://localhost:5000/api/accounts/getUser', {}, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Send the token in the Authorization header\r\n          },\r\n        });\r\n\r\n        setAccountData(response.data); // Set the account data received from backend\r\n      } catch (error) {\r\n        console.error('Error fetching account details:', error);\r\n        if (error.response && error.response.data) {\r\n          setMessage(error.response.data.message); // Display error message\r\n        } else {\r\n          setMessage('Failed to fetch account details. Please try again.');\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchAccountDetails();\r\n  }, []);\r\n\r\n  return { accountData, message };\r\n};\r\n\r\nexport default getAccountDetails;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMS,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC;MACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAE/C,IAAI,CAACF,KAAK,EAAE;QACVF,UAAU,CAAC,uBAAuB,CAAC;QACnC;MACF;MAEA,IAAI;QACF;QACA,MAAMK,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,4CAA4C,EAAE,CAAC,CAAC,EAAE;UAClFC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK,EAAE,CAAE;UACpC;QACF,CAAC,CAAC;QAEFJ,cAAc,CAACO,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD,IAAIA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACI,IAAI,EAAE;UACzCT,UAAU,CAACU,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACV,OAAO,CAAC,CAAC,CAAC;QAC3C,CAAC,MAAM;UACLC,UAAU,CAAC,oDAAoD,CAAC;QAClE;MACF;IACF,CAAC;IAEDC,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEJ,WAAW;IAAEE;EAAQ,CAAC;AACjC,CAAC;AAACH,EAAA,CArCID,iBAAiB;AAuCvB,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}