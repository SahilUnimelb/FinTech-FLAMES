{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\FinTech-FLAMES\\\\FrontEnd\\\\src\\\\Components\\\\ChatBot\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const toggleChatWindow = () => {\n    setIsChatOpen(!isChatOpen);\n  };\n  const handleSendMessage = () => {\n    if (inputValue.trim() !== '') {\n      setMessages([...messages, {\n        text: inputValue,\n        sender: 'user'\n      }]);\n      setTimeout(() => {\n        setMessages([...messages, {\n          text: inputValue,\n          sender: 'user'\n        }, {\n          text: 'This is a proxy response from the chatbot.',\n          sender: 'bot'\n        }]);\n      }, 1000);\n      setInputValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-bot\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-button\",\n      onClick: toggleChatWindow,\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), isChatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatbot, \"rSe0tA55IBy11TvIzPVynkHGqYY=\");\n_c = Chatbot;\n;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","isChatOpen","setIsChatOpen","messages","setMessages","inputValue","setInputValue","toggleChatWindow","handleSendMessage","trim","text","sender","setTimeout","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","type","value","onChange","e","target","onKeyPress","key","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/FinTech-FLAMES/FrontEnd/src/Components/ChatBot/Chatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nexport default function Chatbot() {\r\n    const [isChatOpen, setIsChatOpen] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputValue, setInputValue] = useState('');\r\n  \r\n    const toggleChatWindow = () => {\r\n        setIsChatOpen(!isChatOpen);\r\n    };\r\n  \r\n    const handleSendMessage = () => {\r\n        if (inputValue.trim() !== '') {\r\n            setMessages([...messages, { text: inputValue, sender: 'user' }]);\r\n            setTimeout(() => {\r\n            setMessages([...messages, { text: inputValue, sender: 'user' }, { text: 'This is a proxy response from the chatbot.', sender: 'bot' }]);\r\n            }, 1000);\r\n            setInputValue('');\r\n        }\r\n    };\r\n  \r\n    return (\r\n        <div className=\"chat-bot\">\r\n            <button className=\"chatbot-button\" onClick={toggleChatWindow}>ðŸ’¬</button>\r\n            {isChatOpen && (\r\n                <div className=\"chat-window\">\r\n                    <div className=\"chat-header\">Chatbot</div>\r\n                    <div className=\"chat-body\">\r\n                        {messages.map((message, index) => (\r\n                            <div key={index} className={`chat-message ${message.sender}`}>\r\n                            {message.text}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"chat-footer\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={inputValue}\r\n                            onChange={(e) => setInputValue(e.target.value)}\r\n                            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n                        />\r\n                        <button onClick={handleSendMessage}>Send</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n      </div>\r\n    );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}