{"ast":null,"code":"import axios from 'axios';\nconst getAccountDetails = async () => {\n  // Retrieve the token from localStorage\n  const token = localStorage.getItem('authToken');\n  if (!token) {\n    return;\n  }\n  try {\n    // Make a request to get the user account details\n    const response = await axios.post('http://localhost:5000/api/accounts/getUser', {}, {\n      headers: {\n        Authorization: `Bearer ${token}` // Send the token in the Authorization header\n      }\n    });\n    return response.data; // Set the account data received from backend\n  } catch (error) {\n    console.error('Error fetching account details:', error);\n  }\n};\nexport default getAccountDetails;","map":{"version":3,"names":["axios","getAccountDetails","token","localStorage","getItem","response","post","headers","Authorization","data","error","console"],"sources":["C:/Users/User/Documents/GitHub/FinTech-FLAMES/FrontEnd/src/Hooks/getAccountDetails.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst getAccountDetails = async () => {\r\n  // Retrieve the token from localStorage\r\n  const token = localStorage.getItem('authToken'); \r\n\r\n  if (!token) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Make a request to get the user account details\r\n    const response = await axios.post('http://localhost:5000/api/accounts/getUser', {}, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // Send the token in the Authorization header\r\n      },\r\n    });\r\n\r\n    return response.data; // Set the account data received from backend\r\n  } catch (error) {\r\n    console.error('Error fetching account details:', error);\r\n    \r\n  }\r\n};\r\n\r\n\r\nexport default getAccountDetails;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACpC;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAE/C,IAAI,CAACF,KAAK,EAAE;IACV;EACF;EAEA,IAAI;IACF;IACA,MAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,4CAA4C,EAAE,CAAC,CAAC,EAAE;MAClFC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,KAAK,EAAE,CAAE;MACpC;IACF,CAAC,CAAC;IAEF,OAAOG,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;EAEzD;AACF,CAAC;AAGD,eAAeT,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}