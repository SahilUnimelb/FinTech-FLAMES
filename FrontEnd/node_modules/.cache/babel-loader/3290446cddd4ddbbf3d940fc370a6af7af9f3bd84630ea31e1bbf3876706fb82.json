{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\FinTech-FLAMES\\\\FrontEnd\\\\src\\\\Pages\\\\AccountPages\\\\ViewAccounts\\\\ViewAccounts.jsx\",\n  _s2 = $RefreshSig$();\nimport axios from 'axios';\nimport { format, parse } from 'date-fns';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from '../../../Components/Dropdown/Dropdown';\nimport './ViewAccounts.css';\nimport { isValid } from 'date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ViewAccounts({\n  active,\n  setActive,\n  onClickDiv\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const options = ['Profile', 'Savings Account', 'Transactions Account'];\n  const [flipped, setFlipped] = useState(false);\n  const [message, setMessage] = useState('');\n  const [accountData, setAccountData] = useState(() => {\n    const storedData = localStorage.getItem('accountData');\n    return storedData ? JSON.parse(storedData) : null;\n  });\n  const flag = false;\n  // Fetch user account details on component mount\n  useEffect(() => {\n    const fetchAccountDetails = async () => {\n      // Retrieve the token from localStorage\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        setMessage('You are not logged in');\n        return;\n      }\n      try {\n        // Make a request to get the user account details\n        const response = await axios.post('http://localhost:5000/api/accounts/getUser', {}, {\n          headers: {\n            Authorization: `Bearer ${token}` // Send the token in the Authorization header\n          }\n        });\n        setAccountData(response.data); // Set the account data received from backend\n        localStorage.setItem('accountData', JSON.stringify(response.data));\n      } catch (error) {\n        if (error.response && error.response.data) {\n          setMessage(error.response.data.message); // Display error message\n        } else {\n          setMessage('Failed to fetch account details. Please try again.');\n        }\n      }\n    };\n    fetchAccountDetails();\n  }, []);\n  function parseCardNumber(cardNumber) {\n    return cardNumber.replace(/(.{4})/g, '$1 ');\n  }\n  function parseExpiryDate(month, year) {\n    // Ensure the month is two digits (pad with zero if necessary)\n    const formattedMonth = month.toString().padStart(2, '0');\n    // Extract the last two digits of the year\n    const formattedYear = year.toString().slice(-2);\n    // Return the formatted string in MM/YY format\n    return `${formattedMonth}/${formattedYear}`;\n  }\n  function parseBsb(bsb) {\n    const bsbString = bsb.toString();\n    return bsbString.replace(/(\\d{3})(?=\\d)/g, '$1 ');\n  }\n  function parseTransactions(transactions) {\n    return transactions.map(transaction => {\n      // Format the amount with a dollar sign and two decimal places\n      const amountFormatted = transaction.amount < 0 ? `-$${Math.abs(transaction.amount).toFixed(2)}` : `$${transaction.amount.toFixed(2)}`;\n\n      // Format the date (assuming it's in ISO format)\n      const dateFormatted = new Date(transaction.date).toLocaleDateString();\n      return {\n        date: dateFormatted,\n        description: transaction.description || transaction.log,\n        // Use description or log\n        amount: amountFormatted\n      };\n    });\n  }\n\n  /* This is a proxy data. idk how the backend is storing their data, so if yall need me to make tweaks and shit. lmk */\n  const savingsHistory = parseTransactions(accountData.savingAccDetails.transactions);\n  const transactionsHistory = parseTransactions(accountData.transAccDetails.transactions);\n\n  /* more proxy data for backend to deal with. PLEASE let me know with ample time\r\n  if the formatting needs changing. */\n  const user = {\n    name: accountData.name,\n    username: accountData.username,\n    email: accountData.email\n  };\n  const flipCard = () => {\n    setFlipped(!flipped);\n  };\n\n  // Group the filtered transactions by month\n  const TransactionTable = ({\n    transactions\n  }) => {\n    _s();\n    const rows = [...transactions];\n    while (rows.length < 20) {\n      rows.push({\n        date: '',\n        description: '',\n        amount: ''\n      });\n    }\n    const [searchQuery, setSearchQuery] = useState('');\n    const groupTransactionsByMonth = transactions => {\n      console.log(transactions);\n      // Sort transactions by date in descending order\n      const sortedTransactions = [...transactions].reverse();\n\n      // Group transactions by month and year\n      return sortedTransactions.reduce((groups, transaction) => {\n        console.log(\"trans date: \", transaction.date);\n        const parsedDate = parse(transaction.date, 'MM/dd/yyyy', new Date());\n        // Format the date to DD/MM/YYYY format\n\n        // console.log(parsedDate);\n        if (!isValid(parsedDate)) {\n          console.log(`Invalid date encountered: ${transaction.date}`);\n          return groups; // Skip invalid dates\n        }\n        const dateFormatted = format(parsedDate, 'dd/MM/yyyy');\n        const monthYear = format(dateFormatted, 'MMMM yyyy');\n        if (!groups[monthYear]) {\n          groups[monthYear] = [];\n        }\n        groups[monthYear].push(transaction);\n        return groups;\n      }, {});\n    };\n\n    // Function to filter transactions based on search query\n    const filteredTransactions = useMemo(() => {\n      if (!searchQuery.trim()) {\n        return transactions;\n      }\n      const query = searchQuery.trim().toLowerCase();\n\n      // Check if the query matches a month name\n      const isMonthSearch = transactions.some(txn => {\n        const parsedDate = parse(txn.date, 'dd/MM/yyyy', new Date());\n        const monthName = format(parsedDate, 'MMMM').toLowerCase();\n        return monthName === query;\n      });\n      if (isMonthSearch) {\n        return transactions.filter(txn => {\n          const parsedDate = parse(txn.date, 'dd/MM/yyyy', new Date());\n          const monthName = format(parsedDate, 'MMMM').toLowerCase();\n          return monthName === query;\n        });\n      }\n\n      // Check if the query matches a date format (DD/MM/YYYY)\n      const isDateSearch = /^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(query);\n      if (isDateSearch) {\n        return transactions.filter(txn => txn.date === query);\n      }\n\n      // If the query doesn't match month or date, return all transactions\n      return transactions;\n    }, [searchQuery, transactions]);\n    const groupedTransactions = useMemo(() => {\n      return groupTransactionsByMonth(filteredTransactions);\n    }, [filteredTransactions]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by month (e.g., September) or date (e.g., 20/09/2024)\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollable-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"transaction-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date of Transaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description of Transaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Money Transferred\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.keys(groupedTransactions).length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                className: \"no-results\",\n                children: \"No transactions found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this) : Object.keys(groupedTransactions).map(monthYear => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"month-header\",\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"3\",\n                  children: monthYear\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), groupedTransactions[monthYear].map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"transact-date\",\n                  children: transaction.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"transact-desc\",\n                  children: transaction.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: `transact-amount ${transaction.amount.startsWith('-') ? 'outgoing' : 'incoming'}`,\n                  children: transaction.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this))]\n            }, monthYear, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this);\n  };\n  _s(TransactionTable, \"BsdsYkfGHTcLNp/MlVbIHE1H0YA=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-header\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        active: active,\n        setActive: setActive,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"View Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-view\",\n        children: [\"(\", active, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `sidebar-profile ${active === \"Profile\" ? \"sidebar-profile-active\" : \"\"}`,\n          onClick: () => onClickDiv(\"Profile\"),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `sidebar-savings ${active === \"Savings Account\" ? \"sidebar-savings-active\" : \"\"}`,\n          onClick: () => onClickDiv(\"Savings Account\"),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Savings Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `sidebar-transactions ${active === \"Transactions Account\" ? \"sidebar-transactions-active\" : \"\"}`,\n          onClick: () => onClickDiv(\"Transactions Account\"),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Transactions Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-balance\",\n          children: active === \"Profile\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"view-user-profile\",\n              children: [flag && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: message\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Profile Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"view-user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"view-user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"view-user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/editprofile\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-profile-button\",\n                  children: \"Edit Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 43\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"credit-card-container\",\n              onClick: flipCard,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `credit-card ${flipped ? 'flipped' : ''}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-front\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-logo\",\n                      children: \"VISA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-chip\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-number\",\n                    children: parseCardNumber(accountData.cardDetails.number)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-holder\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Card Holder\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-holder-name\",\n                      children: accountData.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-expiry\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Expires\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-expiry-date\",\n                      children: parseExpiryDate(accountData.cardDetails.expiryMonth, accountData.cardDetails.expiryYear)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-back\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-bsb\",\n                      children: [\"BSB: \", parseBsb(accountData.bsb)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-account-number\",\n                      children: [\"Account Number: \", accountData.accNo]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-cvv\",\n                      children: [\"CVV: \", accountData.cardDetails.cvv]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history\",\n          children: [active === \"Savings Account\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Balance: $\", accountData.savingAccDetails.balance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Saving History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TransactionTable, {\n              transactions: savingsHistory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"print-pdf\",\n              children: \"Export as PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), active === \"Transactions Account\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Balance: $\", accountData.transAccDetails.balance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Transaction History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TransactionTable, {\n              transactions: transactionsHistory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"print-pdf\",\n              children: \"Export as PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\n_s2(ViewAccounts, \"gZ8A1qad+l0DgTtnA4rO0HKzpQ0=\");\n_c = ViewAccounts;\nvar _c;\n$RefreshReg$(_c, \"ViewAccounts\");","map":{"version":3,"names":["axios","format","parse","React","useEffect","useMemo","useState","Link","Dropdown","isValid","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewAccounts","active","setActive","onClickDiv","_s2","_s","$RefreshSig$","options","flipped","setFlipped","message","setMessage","accountData","setAccountData","storedData","localStorage","getItem","JSON","flag","fetchAccountDetails","token","response","post","headers","Authorization","data","setItem","stringify","error","parseCardNumber","cardNumber","replace","parseExpiryDate","month","year","formattedMonth","toString","padStart","formattedYear","slice","parseBsb","bsb","bsbString","parseTransactions","transactions","map","transaction","amountFormatted","amount","Math","abs","toFixed","dateFormatted","Date","date","toLocaleDateString","description","log","savingsHistory","savingAccDetails","transactionsHistory","transAccDetails","user","name","username","email","flipCard","TransactionTable","rows","length","push","searchQuery","setSearchQuery","groupTransactionsByMonth","console","sortedTransactions","reverse","reduce","groups","parsedDate","monthYear","filteredTransactions","trim","query","toLowerCase","isMonthSearch","some","txn","monthName","filter","isDateSearch","test","groupedTransactions","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","colSpan","index","startsWith","onClick","to","cardDetails","number","expiryMonth","expiryYear","accNo","cvv","balance","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/FinTech-FLAMES/FrontEnd/src/Pages/AccountPages/ViewAccounts/ViewAccounts.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { format, parse } from 'date-fns';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Dropdown } from '../../../Components/Dropdown/Dropdown';\r\nimport './ViewAccounts.css';\r\nimport { isValid } from 'date-fns';\r\n\r\nexport default function ViewAccounts({active, setActive, onClickDiv}) {\r\n  const options = ['Profile', 'Savings Account', 'Transactions Account']\r\n\r\n  const [flipped, setFlipped] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [accountData, setAccountData] = useState(() => {\r\n    const storedData = localStorage.getItem('accountData');\r\n    return storedData ? JSON.parse(storedData) : null;\r\n  });\r\n  const flag = false;\r\n  // Fetch user account details on component mount\r\n  useEffect(() => {\r\n    const fetchAccountDetails = async () => {\r\n      // Retrieve the token from localStorage\r\n      const token = localStorage.getItem('authToken');\r\n\r\n      if (!token) {\r\n        setMessage('You are not logged in');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Make a request to get the user account details\r\n        const response = await axios.post('http://localhost:5000/api/accounts/getUser', {}, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Send the token in the Authorization header\r\n          },\r\n        });\r\n\r\n        setAccountData(response.data); // Set the account data received from backend\r\n        localStorage.setItem('accountData', JSON.stringify(response.data));\r\n      } catch (error) {\r\n        if (error.response && error.response.data) {\r\n          setMessage(error.response.data.message); // Display error message\r\n        } else {\r\n          setMessage('Failed to fetch account details. Please try again.');\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchAccountDetails();\r\n  }, []);\r\n\r\n  function parseCardNumber(cardNumber) {\r\n    return cardNumber.replace(/(.{4})/g, '$1 ');\r\n  }\r\n\r\n  function parseExpiryDate(month, year) {\r\n    // Ensure the month is two digits (pad with zero if necessary)\r\n    const formattedMonth = month.toString().padStart(2, '0');\r\n    // Extract the last two digits of the year\r\n    const formattedYear = year.toString().slice(-2);\r\n    // Return the formatted string in MM/YY format\r\n    return `${formattedMonth}/${formattedYear}`;\r\n  }\r\n\r\n  function parseBsb(bsb) {\r\n    const bsbString = bsb.toString();\r\n    return bsbString.replace(/(\\d{3})(?=\\d)/g, '$1 ');\r\n  }\r\n\r\n  function parseTransactions(transactions) {\r\n    return transactions.map(transaction => {\r\n      // Format the amount with a dollar sign and two decimal places\r\n      const amountFormatted = transaction.amount < 0\r\n        ? `-$${Math.abs(transaction.amount).toFixed(2)}`\r\n        : `$${transaction.amount.toFixed(2)}`;\r\n\r\n      // Format the date (assuming it's in ISO format)\r\n      const dateFormatted = new Date(transaction.date).toLocaleDateString();\r\n\r\n      return {\r\n        date: dateFormatted,\r\n        description: transaction.description || transaction.log, // Use description or log\r\n        amount: amountFormatted\r\n      };\r\n    });\r\n  }\r\n\r\n  /* This is a proxy data. idk how the backend is storing their data, so if yall need me to make tweaks and shit. lmk */\r\n  const savingsHistory = parseTransactions(accountData.savingAccDetails.transactions);\r\n\r\n  const transactionsHistory = parseTransactions(accountData.transAccDetails.transactions);\r\n\r\n/* more proxy data for backend to deal with. PLEASE let me know with ample time\r\nif the formatting needs changing. */\r\n  const user = {\r\n    name: accountData.name,\r\n    username: accountData.username,\r\n    email: accountData.email\r\n  };\r\n\r\n  const flipCard = () => {\r\n    setFlipped(!flipped);\r\n  };\r\n\r\n\r\n  // Group the filtered transactions by month\r\n  const TransactionTable = ({ transactions }) => {\r\n    const rows = [...transactions];\r\n\r\n    while (rows.length < 20) {\r\n      rows.push({ date: '', description: '', amount: '' });\r\n    }\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n  const groupTransactionsByMonth = (transactions) => {\r\n    console.log(transactions);\r\n    // Sort transactions by date in descending order\r\n    const sortedTransactions = [...transactions].reverse();\r\n\r\n    // Group transactions by month and year\r\n    return sortedTransactions.reduce((groups, transaction) => {\r\n      console.log(\"trans date: \", transaction.date);\r\n      const parsedDate = parse(transaction.date, 'MM/dd/yyyy', new Date());\r\n      // Format the date to DD/MM/YYYY format\r\n      \r\n      // console.log(parsedDate);\r\n      if (!isValid(parsedDate)) {\r\n        console.log(`Invalid date encountered: ${transaction.date}`);\r\n        return groups; // Skip invalid dates\r\n      }\r\n      const dateFormatted = format(parsedDate, 'dd/MM/yyyy');\r\n      const monthYear = format(dateFormatted, 'MMMM yyyy');\r\n\r\n      if (!groups[monthYear]) {\r\n        groups[monthYear] = [];\r\n      }\r\n\r\n      groups[monthYear].push(transaction);\r\n\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  // Function to filter transactions based on search query\r\n  const filteredTransactions = useMemo(() => {\r\n    if (!searchQuery.trim()) {\r\n      return transactions;\r\n    }\r\n\r\n    const query = searchQuery.trim().toLowerCase();\r\n\r\n    // Check if the query matches a month name\r\n    const isMonthSearch = transactions.some((txn) => {\r\n      const parsedDate = parse(txn.date, 'dd/MM/yyyy', new Date());\r\n      const monthName = format(parsedDate, 'MMMM').toLowerCase();\r\n      return monthName === query;\r\n    });\r\n\r\n    if (isMonthSearch) {\r\n      return transactions.filter((txn) => {\r\n        const parsedDate = parse(txn.date, 'dd/MM/yyyy', new Date());\r\n        const monthName = format(parsedDate, 'MMMM').toLowerCase();\r\n        return monthName === query;\r\n      });\r\n    }\r\n\r\n    // Check if the query matches a date format (DD/MM/YYYY)\r\n    const isDateSearch = /^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(query);\r\n    if (isDateSearch) {\r\n      return transactions.filter((txn) => txn.date === query);\r\n    }\r\n\r\n    // If the query doesn't match month or date, return all transactions\r\n    return transactions;\r\n  }, [searchQuery, transactions]);\r\n\r\n    const groupedTransactions = useMemo(() => {\r\n      return groupTransactionsByMonth(filteredTransactions);\r\n    }, [filteredTransactions]);\r\n    return (\r\n      <div className=\"transaction-table-container\">\r\n      {/* Search Input Field */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by month (e.g., September) or date (e.g., 20/09/2024)\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          className=\"search-input\"\r\n        />\r\n      </div>\r\n\r\n      {/* Transaction Table */}\r\n      <div className=\"scrollable-container\">\r\n        <table className=\"transaction-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date of Transaction</th>\r\n              <th>Description of Transaction</th>\r\n              <th>Money Transferred</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.keys(groupedTransactions).length === 0 ? (\r\n              <tr>\r\n                <td colSpan=\"3\" className=\"no-results\">\r\n                  No transactions found.\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              Object.keys(groupedTransactions).map((monthYear) => (\r\n                <React.Fragment key={monthYear}>\r\n                  {/* Month Header */}\r\n                  <tr className=\"month-header\">\r\n                    <td colSpan=\"3\">{monthYear}</td>\r\n                  </tr>\r\n                  {/* Transactions for the Month */}\r\n                  {groupedTransactions[monthYear].map((transaction, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"transact-date\">{transaction.date}</td>\r\n                      <td className=\"transact-desc\">{transaction.description}</td>\r\n                      <td\r\n                        className={`transact-amount ${\r\n                          transaction.amount.startsWith('-') ? 'outgoing' : 'incoming'\r\n                        }`}\r\n                      >\r\n                        {transaction.amount}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </React.Fragment>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"view\">\r\n      <div className=\"view-header\">\r\n        <Dropdown active = {active} setActive = {setActive} options = {options} />\r\n        <p>View Account</p>\r\n        <div className='mobile-view'>\r\n          ({active})\r\n        </div>\r\n      </div>\r\n      <div className=\"view-container\">\r\n        <div className=\"view-sidebar\">\r\n          <div className={`sidebar-profile ${active === \"Profile\" ? \"sidebar-profile-active\" : \"\"}`} onClick={() => onClickDiv(\"Profile\")}>\r\n            <p>Profile</p>\r\n          </div>\r\n          <div className={`sidebar-savings ${active === \"Savings Account\" ? \"sidebar-savings-active\" : \"\"}`} onClick={() => onClickDiv(\"Savings Account\")}>\r\n            <p>Savings Account</p>\r\n          </div>\r\n          <div className={`sidebar-transactions ${active === \"Transactions Account\" ? \"sidebar-transactions-active\" : \"\"}`} onClick={() => onClickDiv(\"Transactions Account\")}>\r\n            <p>Transactions Account</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"view-content\">\r\n          <div className=\"view-balance\">\r\n            {active === \"Profile\" && (\r\n              <div className=\"profile-container\">\r\n                <div className=\"view-user-profile\">\r\n                  {flag && (\r\n                    <>\r\n                    {message}\r\n                    </>\r\n                  )}\r\n                  <h1>Profile Details</h1>\r\n                  <div className=\"view-user-info\">\r\n                    <label>Name:</label>\r\n                    <span>{user.name}</span>\r\n                  </div>\r\n                  <div className=\"view-user-info\">\r\n                    <label>Username:</label>\r\n                    <span>{user.username}</span>\r\n                  </div>\r\n                  <div className=\"view-user-info\">\r\n                    <label>Email:</label>\r\n                    <span>{user.email}</span>\r\n                  </div>\r\n                  <Link to=\"/editprofile\"><button className=\"edit-profile-button\">Edit Profile</button></Link>\r\n                </div>\r\n                <div className=\"credit-card-container\" onClick={flipCard}>\r\n                  <div className={`credit-card ${flipped ? 'flipped' : ''}`}>\r\n                    <div className=\"card-front\">\r\n                      <div className=\"card-header\">\r\n                        <div className=\"card-logo\">VISA</div>\r\n                        <div className=\"card-chip\"></div>\r\n                      </div>\r\n                      <div className=\"card-number\">{parseCardNumber(accountData.cardDetails.number)}</div>\r\n                      <div className=\"card-holder\">\r\n                        <span>Card Holder</span>\r\n                        <div className=\"card-holder-name\">{accountData.name}</div>\r\n                      </div>\r\n                      <div className=\"card-expiry\">\r\n                        <span>Expires</span>\r\n                        <div className=\"card-expiry-date\">{parseExpiryDate(accountData.cardDetails.expiryMonth, accountData.cardDetails.expiryYear)}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-back\">\r\n                      <div className=\"card-info\">\r\n                        <div className=\"card-bsb\">BSB: {parseBsb(accountData.bsb)}</div>\r\n                        <div className=\"card-account-number\">Account Number: {accountData.accNo}</div>\r\n                        <div className=\"card-cvv\">CVV: {accountData.cardDetails.cvv}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n          </div>\r\n          <div className=\"history\">\r\n            {active === \"Savings Account\" && (\r\n              <>\r\n                <h1>Balance: ${accountData.savingAccDetails.balance}</h1>\r\n                <h1>Saving History</h1>\r\n                <TransactionTable transactions={savingsHistory} />\r\n                <button className=\"print-pdf\">Export as PDF</button>\r\n              </>\r\n            )}\r\n            {active === \"Transactions Account\" && (\r\n              <>\r\n                <h1>Balance: ${accountData.transAccDetails.balance}</h1>\r\n                <h1>Transaction History</h1>\r\n                <TransactionTable transactions={transactionsHistory} />\r\n                <button className=\"print-pdf\">Export as PDF</button>\r\n              </>\r\n            )}\r\n          {/* need to find a way to make the react-pdf attachement work*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}