{"ast":null,"code":"import axios from 'axios';\nconst getAccountDetails = async () => {\n  // Retrieve the token from localStorage\n  const token = localStorage.getItem('authToken');\n  if (!token) {\n    setMessage('You are not logged in');\n    return;\n  }\n  try {\n    // Make a request to get the user account details\n    const response = await axios.post('http://localhost:5000/api/accounts/getUser', {}, {\n      headers: {\n        Authorization: `Bearer ${token}` // Send the token in the Authorization header\n      }\n    });\n    return response.data; // Set the account data received from backend\n  } catch (error) {\n    console.error('Error fetching account details:', error);\n    if (error.response && error.response.data) {\n      setMessage(error.response.data.message); // Display error message\n    } else {\n      setMessage('Failed to fetch account details. Please try again.');\n    }\n  }\n};\nexport default getAccountDetails;","map":{"version":3,"names":["axios","getAccountDetails","token","localStorage","getItem","setMessage","response","post","headers","Authorization","data","error","console","message"],"sources":["C:/Users/User/Documents/GitHub/FinTech-FLAMES/FrontEnd/src/Hooks/getAccountDetails.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst getAccountDetails = async () => {\r\n  // Retrieve the token from localStorage\r\n  const token = localStorage.getItem('authToken'); \r\n\r\n  if (!token) {\r\n    setMessage('You are not logged in');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Make a request to get the user account details\r\n    const response = await axios.post('http://localhost:5000/api/accounts/getUser', {}, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // Send the token in the Authorization header\r\n      },\r\n    });\r\n\r\n    return response.data; // Set the account data received from backend\r\n  } catch (error) {\r\n    console.error('Error fetching account details:', error);\r\n    if (error.response && error.response.data) {\r\n      setMessage(error.response.data.message); // Display error message\r\n    } else {\r\n      setMessage('Failed to fetch account details. Please try again.');\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport default getAccountDetails;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACpC;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAE/C,IAAI,CAACF,KAAK,EAAE;IACVG,UAAU,CAAC,uBAAuB,CAAC;IACnC;EACF;EAEA,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,4CAA4C,EAAE,CAAC,CAAC,EAAE;MAClFC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAE;MACpC;IACF,CAAC,CAAC;IAEF,OAAOI,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,IAAIA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACI,IAAI,EAAE;MACzCL,UAAU,CAACM,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC;IAC3C,CAAC,MAAM;MACLR,UAAU,CAAC,oDAAoD,CAAC;IAClE;EACF;AACF,CAAC;AAGD,eAAeJ,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}