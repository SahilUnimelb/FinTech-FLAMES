{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fischer\\\\FinTech-FLAMES-4\\\\FrontEnd\\\\src\\\\Components\\\\Dropdown\\\\Dropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport dropdownToggle from '../../Assets/dropdown.png';\nimport './Dropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dropdown = ({\n  active,\n  setActive,\n  options\n}) => {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const dropdownRef = useRef(null);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsActive(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  function onClickEvent(option) {\n    setActive(option);\n    setIsActive(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-btn\",\n      onClick: () => setIsActive(!isActive),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: dropdownToggle,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-content\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dropdown-item ${active === option ? \"dropdown-item-active\" : \"\"}`,\n        onClick: () => onClickEvent(option),\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 22\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"iwMHaWnoxrEM6DtF7JE9sK2gHt0=\");\n_c = Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useEffect","useRef","useState","dropdownToggle","jsxDEV","_jsxDEV","Dropdown","active","setActive","options","_s","isActive","setIsActive","dropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","onClickEvent","option","className","ref","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/Fischer/FinTech-FLAMES-4/FrontEnd/src/Components/Dropdown/Dropdown.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport dropdownToggle from '../../Assets/dropdown.png'\r\nimport './Dropdown.css'\r\nexport const Dropdown = ({active, setActive, options}) => {\r\n    const [isActive, setIsActive] = useState(false)\r\n    const dropdownRef = useRef(null);\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n          if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n            setIsActive(false);\r\n          }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n          document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n      }, []);\r\n\r\n    function onClickEvent (option) {\r\n        setActive(option)\r\n        setIsActive(false)\r\n    }\r\n  return (\r\n    <div className=\"dropdown\" ref={dropdownRef}>\r\n        <div className=\"dropdown-btn\" onClick={() => setIsActive(!isActive)}>\r\n            <img src= {dropdownToggle} alt = ''/>\r\n        </div>\r\n        {isActive && (\r\n            <div className=\"dropdown-content\">\r\n                {options.map(option => (\r\n                     <div\r\n                      key = {option}\r\n                      className={`dropdown-item ${active === option ? \"dropdown-item-active\" : \"\"}`}\r\n                      onClick={() => onClickEvent(option)}>\r\n                     {option}\r\n                 </div>\r\n                ))}\r\n        </div>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvB,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAACC,MAAM;EAAEC,SAAS;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMW,WAAW,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAChCD,SAAS,CAAC,MAAM;IACZ,MAAMc,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAIF,WAAW,CAACG,OAAO,IAAI,CAACH,WAAW,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACtEN,WAAW,CAAC,KAAK,CAAC;MACpB;IACF,CAAC;IAEDO,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAE1D,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAER,SAASQ,YAAYA,CAAEC,MAAM,EAAE;IAC3Bf,SAAS,CAACe,MAAM,CAAC;IACjBX,WAAW,CAAC,KAAK,CAAC;EACtB;EACF,oBACEP,OAAA;IAAKmB,SAAS,EAAC,UAAU;IAACC,GAAG,EAAEZ,WAAY;IAAAa,QAAA,gBACvCrB,OAAA;MAAKmB,SAAS,EAAC,cAAc;MAACG,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAAC,CAACD,QAAQ,CAAE;MAAAe,QAAA,eAChErB,OAAA;QAAKuB,GAAG,EAAGzB,cAAe;QAAC0B,GAAG,EAAG;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACLtB,QAAQ,iBACLN,OAAA;MAAKmB,SAAS,EAAC,kBAAkB;MAAAE,QAAA,EAC5BjB,OAAO,CAACyB,GAAG,CAACX,MAAM,iBACdlB,OAAA;QAECmB,SAAS,EAAE,iBAAiBjB,MAAM,KAAKgB,MAAM,GAAG,sBAAsB,GAAG,EAAE,EAAG;QAC9EI,OAAO,EAAEA,CAAA,KAAML,YAAY,CAACC,MAAM,CAAE;QAAAG,QAAA,EACpCH;MAAM,GAHCA,MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV,CAAC;AAAAvB,EAAA,CAxCYJ,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}