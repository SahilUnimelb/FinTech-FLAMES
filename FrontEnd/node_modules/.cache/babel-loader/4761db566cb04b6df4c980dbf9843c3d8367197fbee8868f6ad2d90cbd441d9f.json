{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\FinTech-FLAMES\\\\FrontEnd\\\\src\\\\Components\\\\ChatBot\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const toggleChatWindow = () => {\n    setIsChatOpen(!isChatOpen);\n  };\n  const handleSendMessage = async () => {\n    if (inputValue.trim() === '') return;\n    const userMessage = {\n      text: inputValue,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInputValue('');\n    setError(null);\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5000/api/chatbot/chatbot', {\n        message: inputValue\n      });\n      const botReply = response.data.reply;\n      const botMessage = {\n        text: botReply || 'No reply.',\n        sender: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      if (error.response && error.response.data && error.response.data.reply) {\n        setError(error.response.data.reply); // Adjusted to match response structure\n      } else {\n        setError('An unknown error occurred.');\n      }\n      const botMessage = {\n        text: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.reply) || 'An unknown error occurred. Please try again later.',\n        sender: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-bot\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-button\",\n      onClick: toggleChatWindow,\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), isChatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: toggleChatWindow,\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message bot\",\n          children: \"Typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message bot error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your question...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatbot, \"+IUAq5B9FKzKP5Lc5YXqGOaFa7o=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","isChatOpen","setIsChatOpen","messages","setMessages","inputValue","setInputValue","loading","setLoading","error","setError","toggleChatWindow","handleSendMessage","trim","userMessage","text","sender","prevMessages","token","localStorage","getItem","response","post","message","botReply","data","reply","botMessage","_error$response","_error$response$data","handleKeyPress","e","key","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","target","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/FinTech-FLAMES/FrontEnd/src/Components/ChatBot/Chatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Chatbot.css';\r\n\r\nexport default function Chatbot() {\r\n    const [isChatOpen, setIsChatOpen] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const toggleChatWindow = () => {\r\n        setIsChatOpen(!isChatOpen);\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (inputValue.trim() === '') return;\r\n\r\n        const userMessage = { text: inputValue, sender: 'user' };\r\n        setMessages(prevMessages => [...prevMessages, userMessage]);\r\n        setInputValue('');\r\n        setError(null);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n\r\n            const response = await axios.post('http://localhost:5000/api/chatbot/chatbot', {\r\n                message: inputValue\r\n            });\r\n\r\n    \r\n            const botReply = response.data.reply;\r\n\r\n            const botMessage = { text: botReply || 'No reply.', sender: 'bot' };\r\n            setMessages(prevMessages => [...prevMessages, botMessage]);\r\n\r\n        } catch (error) {\r\n            if (error.response && error.response.data && error.response.data.reply) {\r\n                setError(error.response.data.reply); // Adjusted to match response structure\r\n            } else {\r\n                setError('An unknown error occurred.');\r\n            }\r\n            const botMessage = { text: error.response?.data?.reply || 'An unknown error occurred. Please try again later.', sender: 'bot' };\r\n            setMessages(prevMessages => [...prevMessages, botMessage]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-bot\">\r\n            <button className=\"chatbot-button\" onClick={toggleChatWindow}>ðŸ’¬</button>\r\n            {isChatOpen && (\r\n                <div className=\"chat-window\">\r\n                    <div className=\"chat-header\">\r\n                        <span>Chatbot</span>\r\n                        <button className=\"close-button\" onClick={toggleChatWindow}>âœ–</button>\r\n                    </div>\r\n                    <div className=\"chat-body\">\r\n                        {messages.map((message, index) => (\r\n                            <div key={index} className={`chat-message ${message.sender}`}>\r\n                                {message.text}\r\n                            </div>\r\n                        ))}\r\n                        {loading && <div className=\"chat-message bot\">Typing...</div>}\r\n                        {error && <div className=\"chat-message bot error\">{error}</div>}\r\n                    </div>\r\n                    <div className=\"chat-footer\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={inputValue}\r\n                            onChange={(e) => setInputValue(e.target.value)}\r\n                            onKeyPress={handleKeyPress}\r\n                            placeholder=\"Type your question...\"\r\n                        />\r\n                        <button onClick={handleSendMessage}>Send</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}